//! SeaORM Entity. Generated by sea-orm-codegen 0.7.0

use rocket::serde::{Serialize,Deserialize};
use sea_orm::entity::prelude::*;
#[derive(Clone, Debug, PartialEq, DeriveEntityModel,Deserialize,Serialize)]
#[serde(crate = "rocket::serde")]
#[sea_orm(table_name = "post")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub title: String,
    pub author: String,
    #[sea_orm(column_type = "Text")]
    pub content: String,
    pub created_at: i64,
    pub updated_at: i64,
    #[sea_orm(default = 0)]
    pub deleted_at: i64,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
